import json
from typing import List
from gtts import gTTS
import os


def generate_audio_from_script(script_path: str, output_dir: str = "audio") -> List[str]:
    """
    Generates audio files from a video script generated by generate_video_script().
    
    This tool takes the output path from generate_video_script() and creates audio files for each
    section of the script using text-to-speech.
    
    :param script_path: The path to the json file containing the structured script
    :param output_dir: The directory where the audio files will be saved
    :return: List of paths to the generated audio files
    """

    # Create output directory if it doesn't exist
    os.makedirs(output_dir, exist_ok=True)
    
    # Load the script
    with open(script_path, "r") as f:
        video_script = json.load(f)
    
    audio_paths = []
    
    # Generate audio for each section
    for section in video_script["script_sections"]:
        print(f"Generating audio for section {section['section_number']}")

        section_number = section["section_number"]
        narration = section["narration"]
        
        # Create output path for this section
        output_path = os.path.join(output_dir, f"{video_script['project_name']}_section_{section_number}.mp3")
        
        # Generate audio
        tts = gTTS(text=narration, lang="en", slow=False)
        tts.save(output_path)
        
        audio_paths.append(output_path)

    return audio_paths


if __name__ == "__main__":
    script_path = "llm_responses/llm_response_football_history_09_21_10.json"
    audio_paths = generate_audio_from_script(script_path)
    print(audio_paths)
